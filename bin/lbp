#!/usr/bin/env ruby

require 'rdf'
require 'rdf/rdfxml'
require 'rdf/ntriples'
require 'thor'
require 'openssl'
require 'pry'
require 'uri'
require 'lbp' 

class LbpCli < Thor 
  
  desc "hello", "say hello to NAME"
  def hello(name)
      puts "Hello #{name}!"
  end

  desc "init", "create projectifles dirs in current working directory"
  def init(dir)
      directories = ["#{dir}/Conf", "#{dir}/Textfiles", "#{dir}/citationlists"]
      FileUtils.mkpath(directories)
      @dir
  end

  desc "projecfile", "make projetfile from SCTA" 
  def projectfile(sctaurl, installdir)
    resource = RDF::Resource.new(RDF::URI.new(sctaurl))
    #resource = RDF::Resource(RDF::URI.new("http://rdf.rubyforge.org/"))
    graph = RDF::Graph.load(resource)
    data = graph.data
    title = data.query(:predicate => RDF::DC11.title).first.object
    itemarray = []
###Warning Directories in Header need some specification or the user needs to be direct to modify these acoordingly 
    headerdata = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
    <lbpProjectFile>
    <header>
      <collectionTitle>#{title}</collectionTitle>
      <localTextsDirectory>/Users/JCWitt/WebPages/lbplib-testfiles/pp-projectfiles/GitTextfiles/</localTextsDirectory>
      <citationListsDirectory>/Users/JCWitt/WebPages/lbplib-testfiles/pp-projectfiles/citationlists/</citationListsDirectory>
      <xsltDirectories>
        <schema version='lbp-0.0.1' default='true'>
            <critical>/Users/JCWitt/WebPages/lbpwrapper/lombardpress/public/pl_xslt_stylesheets/</critical>
            <documentary>/Users/JCWitt/WebPages/lbpwrapper/lombardpress/public/pl_xslt_stylesheets/</documentary>
            <main_view>text_display.xsl</main_view>
            <index_view>'text_display_index.xsl'</index_view>
            <clean_view>clean_forStatistics.xsl</clean_view>
            <plain_text>plaintext.xsl</plain_text>
            <toc>lectio_outline.xsl</toc>
        </schema>
        <schema version='lbp-0.0.2' default='true'>
            <critical>/Users/JCWitt/WebPages/lbpwrapper/lombardpress/public/pl_xslt_stylesheets/</critical>
            <documentary>/Users/JCWitt/WebPages/lbpwrapper/lombardpress/public/pl_xslt_stylesheets/</documentary>
            <main_view>text_display.xsl</main_view>
            <index_view>'text_display_index.xsl'</index_view>
            <clean_view>clean_forStatistics.xsl</clean_view>
            <plain_text>plaintext.xsl</plain_text>
            <toc>lectio_outline.xsl</toc>
        </schema>
      </xsltDirectories>
      <git_repo>bitbucket.org/jeffreycwitt/</git_repo>
    </header>
      <listofFileNames>
      <div id=\"body\">"

    itemarray << headerdata

    data.query(:predicate => RDF::DC.hasPart).each do |part|
      
      newresource = RDF::Resource.new(part.object)
      newgraph = RDF::Graph.load(newresource)
      newdata = newgraph.data
      
      #type = newdata.query(:predicate => RDF::RDF.type).first.object.to_s
      #type_slug = URI(type.object.to_s).path.split('/').last

      status = newdata.query(:predicate => RDF::URI.new("http://scta.info/property/status")).first.object

      unless status == 'Not Started'
        title = newdata.query(:predicate => RDF::DC11.title).first.object
        id = URI(part.object.to_s).path.split('/').last
        itemunit = "
        <item live='#{status}'>
          <fileName filestem='#{id}'>#{id}.xml</fileName>
          <title>#{title}</title>
        </item>\n"
        itemarray << itemunit
      end
       
    end

    footerdata = "</div>
        </listofFileNames>
    </lbpProjectFile>"
    
    itemarray << footerdata

    f = File.new("#{installdir}/Conf/projectfile.xml", 'w')

    itemarray.each do |section|
      f.write(section)
    end
  end
  desc "loaed_text_files", "clone collection repos" 
  def load_text_files(projectfile, username=nil, password=nil)
    collection = Lbp::Collection.new(projectfile)
    collection.git_clone(username: username, password: password)
  end    
end

LbpCli.start(ARGV)




